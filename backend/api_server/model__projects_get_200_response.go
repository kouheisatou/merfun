/*
Blockchain Transactions API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProjectsGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectsGet200Response{}

// ProjectsGet200Response struct for ProjectsGet200Response
type ProjectsGet200Response struct {
	// The list of projects.
	Transactions []Project `json:"transactions,omitempty"`
}

// NewProjectsGet200Response instantiates a new ProjectsGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectsGet200Response() *ProjectsGet200Response {
	this := ProjectsGet200Response{}
	return &this
}

// NewProjectsGet200ResponseWithDefaults instantiates a new ProjectsGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectsGet200ResponseWithDefaults() *ProjectsGet200Response {
	this := ProjectsGet200Response{}
	return &this
}

// GetTransactions returns the Transactions field value if set, zero value otherwise.
func (o *ProjectsGet200Response) GetTransactions() []Project {
	if o == nil || IsNil(o.Transactions) {
		var ret []Project
		return ret
	}
	return o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsGet200Response) GetTransactionsOk() ([]Project, bool) {
	if o == nil || IsNil(o.Transactions) {
		return nil, false
	}
	return o.Transactions, true
}

// HasTransactions returns a boolean if a field has been set.
func (o *ProjectsGet200Response) HasTransactions() bool {
	if o != nil && !IsNil(o.Transactions) {
		return true
	}

	return false
}

// SetTransactions gets a reference to the given []Project and assigns it to the Transactions field.
func (o *ProjectsGet200Response) SetTransactions(v []Project) {
	o.Transactions = v
}

func (o ProjectsGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectsGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Transactions) {
		toSerialize["transactions"] = o.Transactions
	}
	return toSerialize, nil
}

type NullableProjectsGet200Response struct {
	value *ProjectsGet200Response
	isSet bool
}

func (v NullableProjectsGet200Response) Get() *ProjectsGet200Response {
	return v.value
}

func (v *NullableProjectsGet200Response) Set(val *ProjectsGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectsGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectsGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectsGet200Response(val *ProjectsGet200Response) *NullableProjectsGet200Response {
	return &NullableProjectsGet200Response{value: val, isSet: true}
}

func (v NullableProjectsGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectsGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


